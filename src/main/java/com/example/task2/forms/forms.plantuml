@startuml

title __FORMS's Class Diagram__\n


    namespace om.example.task2 {
      namespace forms {
        class com.example.task2.forms.MyLine {
            ~ length : double
            + MyLine()
            + MyLine()
            + draw()
            + toString()
            ~ area()
        }
      }
    }

  


    namespace om.example.task2 {
      namespace forms {
        class com.example.task2.forms.MyLines {
            ~ length1 : double
            ~ length2 : double
            + MyLines()
            + MyLines()
            + draw()
            + toString()
            ~ area()
        }
      }
    }

  


    namespace om.example.task2 {
      namespace forms {
        class com.example.task2.forms.MyPentagon {
            ~ length : double
            + MyPentagon()
            + MyPentagon()
            + draw()
            + toString()
            ~ area()
        }
      }
    }

  


    namespace om.example.task2 {
      namespace forms {
        class com.example.task2.forms.MyRectangle {
            ~ length : double
            ~ width : double
            + MyRectangle()
            + MyRectangle()
            + draw()
            + new_rec_fill()
            + new_rec_set()
            + toString()
            ~ area()
        }
      }
    }

  


    namespace om.example.task2 {
      namespace forms {
        abstract class com.example.task2.forms.MyShape {
            # color : Color
            # x : double
            # y : double
            + MyShape()
            {abstract} + draw()
            + setColor()
            {abstract} ~ area()
        }
      }
    }

  


    namespace om.example.task2 {
      namespace forms {
        class com.example.task2.forms.MySquare {
            ~ length : double
            + MySquare()
            + MySquare()
            + draw()
            + toString()
            ~ area()
        }
      }
    }

  


    namespace om.example.task2 {
      namespace forms {
        class com.example.task2.forms.MyTriangle {
            ~ length : double
            + MyTriangle()
            + MyTriangle()
            + draw()
            + toString()
            ~ area()
        }
      }
    }

  


    namespace om.example.task2 {
      namespace forms {
        class com.example.task2.forms.ShapeFactory {
            + createShape()
        }
      }
    }

  

  com.example.task2.forms.MyLine -up-|> com.example.task2.forms.MyShape
  com.example.task2.forms.MyLines -up-|> com.example.task2.forms.MyShape
  com.example.task2.forms.MyPentagon -up-|> com.example.task2.forms.MyShape
  com.example.task2.forms.MyRectangle -up-|> com.example.task2.forms.MyShape
  com.example.task2.forms.MySquare -up-|> com.example.task2.forms.MyShape
  com.example.task2.forms.MyTriangle -up-|> com.example.task2.forms.MyShape


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
